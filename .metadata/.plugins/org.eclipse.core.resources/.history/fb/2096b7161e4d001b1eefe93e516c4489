package com.jobready.producerconsumer;

import java.util.*;

public class Consumer implements Runnable {

	List<Integer> questionList = null;

	public Consumer(List<Integer> questionList) {
		super();
		this.questionList = questionList;
	}

	public void answerQuestion(int questionNo) throws InterruptedException {
		synchronized (questionList) {
			while (questionList.isEmpty()) {
				System.out.println("No Questions to Answer... Wait for Producer to get Questions");
				questionList.wait();
			}

		}

		synchronized (questionList) {
			Thread.sleep(100);
			System.out.println("New Question: " + questionNo);
			questionList.add(questionNo);
			Thread.sleep(100);
			questionList.notify();
		}

	}

	@Override
	public void run() {

		while (true) {
			try {
				readQuestion(questionNo++);
			} catch (InterruptedException ex) {
				ex.printStackTrace();
			}

		}

	}
}